import 'package:flutter/material.dart';
import 'package:places/models/theme_models.dart';

enum ThemeName {
  forestCanopy,
  oceanBlue,
  royalVelvet,
}

Map<ThemeName, AppThemeItem> placesThemes = {
  ThemeName.forestCanopy: AppThemeItem(
    colorScheme: AppColorScheme.forestCanopy,
    identifier: 'Forest Canopy',
  ),
  ThemeName.oceanBlue: AppThemeItem(
    colorScheme: AppColorScheme.oceanBlue,
    identifier: 'Ocean Depths',
  ),
  ThemeName.royalVelvet: AppThemeItem(
    colorScheme: AppColorScheme.royalVelvet,
    identifier: 'Royal Velvet',
  ),
};

abstract class AppColorScheme {
  static ThemeColorScheme forestCanopy = const ThemeColorScheme(
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF5DA62C),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFD2F5A7),
      onPrimaryContainer: Color(0xFF1A1C18),
      secondary: Color(0xFF006641),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFD7F6C1),
      onSecondaryContainer: Color(0xFF002113),
      tertiary: Color(0xFF2B614D),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFB2DBC8),
      onTertiaryContainer: Color(0xFF002019),
      surface: Color(0xFFF7FDF1),
      onSurface: Color(0xFF1A1C18),
      surfaceDim: Color(0xFFF5FFEB),
      surfaceBright: Color(0xFFFCFDF6),
      error: Color(0xFFB04F4A),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFF9DEDC),
      onErrorContainer: Color(0xFF410E0B),
      outline: Color(0xFF687558),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFF2F312D),
      onInverseSurface: Color(0xFFF1F1EB),
      inversePrimary: Color(0xFF8EC649),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF17473B),
      onPrimary: Color(0xFFCFF6EC),
      primaryContainer: Color(0xFF006641),
      onPrimaryContainer: Color(0xFFC3EC89),
      secondary: Color(0xFF005235),
      onSecondary: Color(0xFFE2E2DC),
      secondaryContainer: Color(0xFF17473B),
      onSecondaryContainer: Color(0xFF90F1BD),
      tertiary: Color(0xFF2B614D),
      onTertiary: Color(0xFFE2E2DC),
      tertiaryContainer: Color(0xFF1A4536),
      onTertiaryContainer: Color(0xFFA3CEB8),
      surface: Color(0xFF000000),
      onSurface: Color(0xFFE2E2DC),
      surfaceDim: Color(0xFF131313),
      surfaceBright: Color(0xFF000000),
      error: Color(0xFF8C1D18),
      onError: Color(0xFFE2E2DC),
      errorContainer: Color(0xFF601410),
      onErrorContainer: Color(0xFFF9DEDC),
      outline: Color(0xFF474748),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFFE2E2DC),
      onInverseSurface: Color(0xFF000000),
      inversePrimary: Color(0xFF17473B),
    ),
  );

  static ThemeColorScheme oceanBlue = const ThemeColorScheme(
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF3485D0),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFA0C4F1),
      onPrimaryContainer: Color(0xFF002952),
      secondary: Color(0xFF002952),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFD8E6F7),
      onSecondaryContainer: Color(0xFF002952),
      tertiary: Color(0xFF89A7D3),
      onTertiary: Color(0xFF002952),
      tertiaryContainer: Color(0xFFE5EEF9),
      onTertiaryContainer: Color(0xFF002952),
      surface: Color(0xFFEFF4FD),
      onSurface: Color(0xFF001B3D),
      surfaceDim: Color(0xFFE8E9FD),
      surfaceBright: Color(0xFFFBFCFF),
      error: Color(0xFFBA1A1A),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD6),
      onErrorContainer: Color(0xFF410002),
      outline: Color(0xFF505E81),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFF002B5B),
      onInverseSurface: Color(0xFFE5E5E5),
      inversePrimary: Color(0xFF003366),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF003366),
      onPrimary: Color(0xFFD3E4FF),
      primaryContainer: Color(0xFF002952),
      onPrimaryContainer: Color(0xFFD3E4FF),
      secondary: Color(0xFF2A5298),
      onSecondary: Color(0xFFD3E4FF),
      secondaryContainer: Color(0xFF1B3B6F),
      onSecondaryContainer: Color(0xFFD5E3FF),
      tertiary: Color(0xFF1F4580),
      onTertiary: Color(0xFFD3E4FF),
      tertiaryContainer: Color(0xFF15325E),
      onTertiaryContainer: Color(0xFFD6E4FF),
      surface: Color(0xFF000000),
      onSurface: Color(0xFFE2E2FF),
      surfaceDim: Color(0xFF131313),
      surfaceBright: Color(0xFF233344),
      error: Color(0xFFFFB4AB),
      onError: Color(0xFF690005),
      errorContainer: Color(0xFF93000A),
      onErrorContainer: Color(0xFFFFB4AB),
      outline: Color(0xFF474748),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFFE5E5E5),
      onInverseSurface: Color(0xFF001B3D),
      inversePrimary: Color(0xFF6EB4F1),
    ),
  );

  static ThemeColorScheme royalVelvet = const ThemeColorScheme(
    light: ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFFA82BB6),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFDBB8F3),
      onPrimaryContainer: Color(0xFF1A0A1A),
      secondary: Color(0xFF3B173B),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFC9A3E3),
      onSecondaryContainer: Color(0xFF1A0A1A),
      tertiary: Color(0xFF945EB3),
      onTertiary: Color(0xFF1A0A1A),
      tertiaryContainer: Color(0xFFF0E6F5),
      onTertiaryContainer: Color(0xFF1A0A1A),
      surface: Color(0xFFF9F1FD),
      onSurface: Color(0xFF2A0D2A),
      surfaceDim: Color(0xFFF5E9FD),
      surfaceBright: Color(0xFFFDF8FF),
      error: Color(0xFFBA1A1A),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD6),
      onErrorContainer: Color(0xFF410002),
      outline: Color(0xFF73577A),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFF2D1533),
      onInverseSurface: Color(0xFFE5E5E5),
      inversePrimary: Color(0xFF68217A),
    ),
    dark: ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF43154F),
      onPrimary: Color(0xFFE5D5F0),
      primaryContainer: Color(0xFF1A0A1A),
      onPrimaryContainer: Color(0xFFE5D5F0),
      secondary: Color(0xFF945EB3),
      onSecondary: Color(0xFFE5D5F0),
      secondaryContainer: Color(0xFF4A1657),
      onSecondaryContainer: Color(0xFFE8DBF0),
      tertiary: Color(0xFF582D68),
      onTertiary: Color(0xFFE5D5F0),
      tertiaryContainer: Color(0xFF3D1F47),
      onTertiaryContainer: Color(0xFFE8DBF0),
      surface: Color(0xFF000000),
      onSurface: Color(0xFFE8E2F0),
      surfaceDim: Color(0xFF131313),
      surfaceBright: Color(0xFF2D1533),
      error: Color(0xFFFFB4AB),
      onError: Color(0xFF690005),
      errorContainer: Color(0xFF93000A),
      onErrorContainer: Color(0xFFFFB4AB),
      outline: Color(0xFF474748),
      shadow: Color(0xFF000000),
      inverseSurface: Color(0xFFF4E6FF),
      onInverseSurface: Color(0xFF1A0A1A),
      inversePrimary: Color(0xFFB68FD7),
    ),
  );
}
